name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Fetch Version Name
      #run: grep "versionName" app/build.gradle | awk '{print $2}' | tr -d \''"\'
      run: |
        versionName=$(grep "versionName" app/build.gradle | awk '{print $2}' | tr -d '"'\'')
        echo "Version Name: $versionName"
        echo "export VERSION_NAME=$versionName" >> $GITHUB_ENV"

    - name: Use Version Name
      run: |
        versionNameFromEnv=$VERSION_NAME
        echo "Using Version Name from environment variable: $versionNameFromEnv"    
    
    - name: Find APK Files
      run: |
          find . -type f -name "*.apk" -print
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
       name: app-release
       path: ./app/build/outputs/apk/debug/app-debug.apk

    - name: Upload README.md
      uses: Difegue/action-megacmd@master
      with:
          args: put ./app/build/outputs/apk /exportedstuff/$versionNameFromEnv
      env:
        USERNAME: ${{ secrets.MEGA_USERNAME }}
        PASSWORD: ${{ secrets.MEGA_PASSWORD }}


   # # Upload the artifact to GitHub Releases
   #  - name: Upload to GitHub Releases
   #    uses: actions/upload-release-asset@v1
   #    with:
   #        upload_url: ${{ github.event.repository.releases_url }}/assets?name=my-artifact.apk
   #        asset_path: ./app/build/outputs/apk/release/app-release-unsigned.apk
   #        asset_name: myapp.apk
   #    env:
   #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
